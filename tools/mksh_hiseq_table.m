function mksh_hiseq_table(varargin)
% MKSH_HISEQ_TABLE
% 
%   Inputs: 
%       '-annovar_dir': default='/illumina/applications/annovar'
%       '-out': path for output
%       '-vf': Variant function file from annovar annotation
%       '-evf': Exonic variant function file from annovar annotation
% 
% see also hiseq_annotate
% 
% Author: Brian Geier, 2011 BGC
toolName = mfilename ; 
pnames = {'-annovar_dir','-out','-vf','-evf'};
dflts = {'/illumina/applications/annovar',pwd,'',''} ; 

arg = getargs2(pnames,dflts,varargin{:});

print_tool_params2(toolName,1,arg); 
otherwkdir = mkworkfolder(arg.out,toolName); 
fprintf('Saving analysis to %s\n',otherwkdir); 
fid = fopen(fullfile(otherwkdir,sprintf('%s_params.txt',toolName)),'wt'); 
print_tool_params2(toolName,fid,arg); 
fclose(fid); 

mkdir(otherwkdir,'table_build'); 
mkdir(fullfile(otherwkdir,'table_build'),'anno_filter'); 
mkdir(fullfile(otherwkdir,'table_build'),'anno_region') ;

fid = fopen(fullfile(otherwkdir,'driver.sh'),'w'); 
fprintf(fid,'%s\n','#!/bin/bash'); 
    
fprintf(fid,'%s\n\n',['grep -v "exonic" ',...
    arg.vf,' > ',...
    fullfile(otherwkdir,'tmp1.txt')]); 

% Move first two columns to end
fprintf(fid,'%s\n\n',['paste <(cut -f3- ',fullfile(otherwkdir,'tmp1.txt'),...
    ') <(cut -f1,2 ',fullfile(otherwkdir,'tmp1.txt'),') > ',...
    fullfile(otherwkdir,'tmp_1.txt')]); 

fprintf(fid,'%s\n\n',['paste <(cut -f4- ',arg.evf,...
    ' ) <(cut -f2,3 ',arg.evf,...
    ' ) > ',fullfile(otherwkdir,'tmp2.txt')]);

fprintf(fid,'%s\n\n',['cat ',fullfile(otherwkdir,'tmp2.txt'),' ',...
    fullfile(otherwkdir,'tmp_1.txt'),' > ',...
    fullfile(otherwkdir,'table_build',...
    [pullname(arg.evf),'_formated.human'])]); 

fprintf(fid,'%s\n\n',['rm ',fullfile(otherwkdir,'tmp1.txt'),...
    ' ',fullfile(otherwkdir,'tmp2.txt'),' ',...
    fullfile(otherwkdir,'tmp_1.txt')]); 

fprintf(fid,'%s\n\n',[fullfile(arg.annovar_dir,'annotate_variation.pl'),...
    ' --buildver hg19 --outfile ',...
    fullfile(otherwkdir,'table_build','anno_region',pullname(arg.evf)),...
    ' -dbtype segdup -regionanno ',...
    fullfile(otherwkdir,'table_build',[pullname(arg.evf),'_formated.human']),...
    ' ',fullfile(arg.annovar_dir,'humandb/')]); 
fprintf(fid,'%s\n\n',['paste <(cut -f3- ',fullfile(otherwkdir,'table_build','anno_region',...
    [pullname(arg.evf),'.hg19_genomicSuperDups']),...
    ') <(cut -f1,2 ',fullfile(otherwkdir,'table_build','anno_region',...
    [pullname(arg.evf),'.hg19_genomicSuperDups']),...
    ') > ',fullfile(otherwkdir,'table_build','genomicSuperDups.txt')]); 
fprintf(fid,'%s\n\n',['comm -3 <(cut -f3- ',fullfile(otherwkdir,'table_build',...
    'anno_region',[pullname(...
    arg.evf),'.hg19_genomicSuperDups']),' | sort | uniq) <(sort ',...
    fullfile(otherwkdir,'table_build',...
    [pullname(arg.evf),'_formated.human | uniq)']),...
    ' > ',fullfile(otherwkdir,'table_build',[pullname(arg.evf),...
    '_formated_nodups.human'])]); 

fprintf(fid,'%s\n\n',['cat ',fullfile(otherwkdir,'table_build',[pullname(arg.evf),...
    '_formated_nodups.human']), ' | sed -e "s/^[[:space:]]*//" > ',...
     pullname(arg.evf),'_formated_nodups.human']); 
fprintf(fid,'%s\n\n',['rm ',fullfile(otherwkdir,'table_build',[pullname(arg.evf),...
    '_formated_nodups.human'])]); 
fprintf(fid,'%s\n\n',['mv ',pullname(arg.evf),'_formated_nodups.human ',...
    fullfile(otherwkdir,'table_build')]); 

% Append variants that are segmental duplications
fprintf(fid,'%s\n\n',['cat ',fullfile(otherwkdir,'table_build',...
    [pullname(arg.evf),'_formated_nodups.human']),' ',...
    fullfile(otherwkdir,'table_build','genomicSuperDups.txt'),...
    ' > ',fullfile(otherwkdir,'table_build','annotate_input.txt')]); 

fprintf(fid,'%s\n\n',[fullfile(arg.annovar_dir,'annotate_variation.pl'),...
    ' --buildver hg19 --outfile ',...
    fullfile(otherwkdir,'table_build','anno_filter',...
    pullname(arg.evf)),...
    ' -filter ',fullfile(otherwkdir,'table_build',...
    'annotate_input.txt'),' ',fullfile(arg.annovar_dir,'humandb/'),' -vcfdbfile ',...
    'ALL.2of4intersection.20100804.sites.vcf -dbtype vcf']); 

fprintf(fid,'%s\n\n',['paste <(cut -f3- ',fullfile(otherwkdir,'table_build','anno_filter',...
    [pullname(arg.evf),'.hg19_vcf_dropped']),...
    ' ) <(cut -f1,2 ',fullfile(otherwkdir,'table_build','anno_filter',...
    [pullname(arg.evf),'.hg19_vcf_dropped']),...
    ' ) > ',fullfile(otherwkdir,[pullname(arg.evf),'_1000Gdropped.txt'])]);

fprintf(fid,'%s\n\n',['cat ',fullfile(otherwkdir,[pullname(arg.evf),'_1000Gdropped.txt ']),...
    fullfile(otherwkdir,'table_build','anno_filter',[pullname(arg.evf),...
    '.hg19_vcf_filtered']),' > ',fullfile(otherwkdir,'snp131_input.txt')]); 

fprintf(fid,'%s\n\n',[fullfile(arg.annovar_dir,'annotate_variation.pl'),...
    ' --buildver hg19 --outfile ',...
    fullfile(otherwkdir,'table_build','anno_filter',pullname(arg.evf))...
    ,' -filter -dbtype snp131 ',...
    fullfile(otherwkdir,'snp131_input.txt'),' ',fullfile(arg.annovar_dir,'humandb/')]); 

fprintf(fid,'%s\n\n',['cat <(paste <(cut -f3- ',fullfile(otherwkdir,...
    'table_build','anno_filter',...
    [pullname(arg.evf),'.hg19_snp131_dropped']),...
    ' ) <(cut -f1,2 ',fullfile(otherwkdir,'table_build','anno_filter',...
    [pullname(arg.evf),'.hg19_snp131_dropped']),...
    ' )) ',fullfile(otherwkdir,'table_build','anno_filter',...
    [pullname(arg.evf),'.hg19_snp131_filtered',...
    ]),' > ',fullfile(otherwkdir,...
    [pullname(arg.evf),'_finaltable.txt'])]); 

fclose(fid) ;

system(['chmod 755 ',fullfile(otherwkdir,'driver.sh')]); 
